generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./playlists.db"
}

model User {
  id           String     @id @default(uuid())
  email        String     @unique
  name         String?
  accessToken  String
  refreshToken String     @default("")
  tokenExpiry  DateTime
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  playlists    Playlist[]
  sessions     Session[]
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Playlist {
  id             String   @id @default(uuid())
  youtubeId      String?  @unique
  name           String   @unique
  description    String?
  userId         String
  isMusicPlaylist Boolean  @default(false)
  thumbnailUrl   String?
  itemCount      Int      @default(0)
  syncStatus     String   @default("PENDING") // PENDING, SYNCING, SYNCED, ERROR
  lastSyncedAt   DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id])
  videos         Video[]
}

model Video {
  id           String   @id @default(uuid())
  playlistId   String
  title        String
  videoId      String   @unique
  url          String
  description  String?
  thumbnailUrl String?
  position     Int?
  status       String?  // public, private, deleted
  availability Boolean  @default(true) // true = available, false = unavailable
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  playlist     Playlist @relation(fields: [playlistId], references: [id])
}
